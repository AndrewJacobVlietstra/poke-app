{"version":3,"sources":["Components/Display.js","Components/UserSearch.js","images/pokeball.png","App.js","index.js"],"names":["Display","pokeData","types","weight","height","pokeID","normalURL","shinyURL","handlePrev","handleNext","String","prototype","capitalCase","this","charAt","toUpperCase","slice","useState","isShiny","setIsShiny","currentPokeName","name","id","src","onClick","className","UserSearch","userSearch","setUserSearch","setCurrentURL","isError","type","value","placeholder","onChange","e","target","onKeyUp","key","toLowerCase","App","currentURL","currentPokemon","setCurrentPokemon","isLoading","setIsLoading","setIsError","currentPokeTypes","setCurrentPokeTypes","currentPokeWeight","setCurrentPokeWeight","currentPokeHeight","setCurrentPokeHeight","currentPokeID","setCurrentPokeID","setShinyURL","setNormalURL","useEffect","url","a","fetch","response","status","setTimeout","Error","json","data","map","console","error","message","getPokeData","Number","PokeBall","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aeabae97.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Display({\r\n  pokeData,\r\n  types,\r\n  weight,\r\n  height,\r\n  pokeID,\r\n  normalURL,\r\n  shinyURL,\r\n  handlePrev,\r\n  handleNext,\r\n}) {\r\n  String.prototype.capitalCase = function () {\r\n    if (!this) return;\r\n    return this.charAt(0).toUpperCase() + this.slice(1);\r\n  };\r\n\r\n  const [isShiny, setIsShiny] = useState(false);\r\n\r\n  let currentPokeName = pokeData.name;\r\n  return (\r\n    <>\r\n      <div>\r\n        <div>\r\n          {pokeData.id && (\r\n            <img\r\n              id=\"pokeSprite\"\r\n              src={isShiny ? shinyURL : normalURL}\r\n              onClick={() => setIsShiny(!isShiny)}\r\n            />\r\n          )}\r\n          {currentPokeName && <h4>{currentPokeName.capitalCase()}</h4>}\r\n          {pokeID && (\r\n            <div className=\"prevNextButtons\">\r\n              <button onClick={handlePrev}>&larr;</button>\r\n              <button onClick={handleNext}>&rarr;</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"gridStats\">\r\n          {types && (\r\n            <p>\r\n              Type: <span className=\"pokeData\">{types}</span>\r\n            </p>\r\n          )}\r\n          {pokeID && (\r\n            <p>\r\n              PokeDex-ID: <span className=\"pokeData\">{pokeID}</span>\r\n            </p>\r\n          )}\r\n          {height && (\r\n            <p>\r\n              Height: <span className=\"pokeData\">{height}</span>\r\n            </p>\r\n          )}\r\n          {weight && (\r\n            <p>\r\n              Weight: <span className=\"pokeData\">{weight}</span>\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Display;\r\n","import React from \"react\";\r\n\r\nfunction UserSearch({ userSearch, setUserSearch, setCurrentURL, isError }) {\r\n  return (\r\n    <div className=\"searchGroup\">\r\n      <label>Enter a Pokemon Name or ID...</label>\r\n      <hr className=\"separator\"></hr>\r\n      {isError && <h6>Oops that's not a valid Pokemon, try again!</h6>}\r\n      <input\r\n        className={isError ? 'errorInput' : ''}\r\n        id=\"pokeSearch\"\r\n        type=\"text\"\r\n        value={userSearch}\r\n        placeholder='Type here...'\r\n        onChange={(e) => setUserSearch(e.target.value)}\r\n        onKeyUp={(e) => {\r\n          if (e.key === \"Enter\") {\r\n            setCurrentURL(\r\n              `https://pokeapi.co/api/v2/pokemon/${userSearch.toLowerCase()}`\r\n            );\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserSearch;\r\n","export default __webpack_public_path__ + \"static/media/pokeball.8956d521.png\";","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Display from \"./Components/Display\";\nimport UserSearch from \"./Components/UserSearch\";\nimport PokeBall from \"./images/pokeball.png\";\n\nfunction App() {\n  const [userSearch, setUserSearch] = useState(\"\");\n  const [currentURL, setCurrentURL] = useState(\"\");\n  const [currentPokemon, setCurrentPokemon] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const [currentPokeTypes, setCurrentPokeTypes] = useState('');\n  const [currentPokeWeight, setCurrentPokeWeight] = useState('');\n  const [currentPokeHeight, setCurrentPokeHeight] = useState('');\n  const [currentPokeID, setCurrentPokeID] = useState(null);\n  const [shinyURL, setShinyURL] = useState('');\n  const [normalURL, setNormalURL] = useState('');\n\n\n  useEffect(() => {\n    async function getPokeData(url) {\n      try {\n        setIsLoading(true);\n        const response = await fetch(url);\n        if (response.status === 404) {\n          setIsError(true);\n          setTimeout(() => {\n            setIsError(false);\n          }, 8000);\n          throw new Error(`Could not Find Pokemon ${response.status}`);\n        }\n        const data = await response.json();\n        setCurrentPokemon(data);\n        setCurrentPokeTypes(data.types.map(type => `${type.type.name.capitalCase()} `));\n        setCurrentPokeWeight(`${data.weight / 10} kg`);\n        setCurrentPokeHeight(`${data.height / 10} m`);\n        setCurrentPokeID(`${data.id}`);\n        setShinyURL(`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/shiny/${data.id}.png`);\n        setNormalURL(`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${data.id}.png`);\n        setIsError(false);\n      } catch (err) {\n        console.error(err.message);\n      } finally {\n        setTimeout(() => {\n          setIsLoading(false);\n        }, 1500);\n      }\n    }\n\n    getPokeData(currentURL);\n  }, [currentURL]);\n\n  function handlePrev() {\n    setCurrentURL(`https://pokeapi.co/api/v2/pokemon/${Number(currentPokeID) - 1}`);\n  };\n\n  function handleNext() {\n    setCurrentURL(`https://pokeapi.co/api/v2/pokemon/${Number(currentPokeID) + 1}`);\n  };\n\n  return (\n    <div className=\"App\">\n      <UserSearch\n        isError={isError}\n        userSearch={userSearch}\n        setUserSearch={setUserSearch}\n        setCurrentURL={setCurrentURL}\n      />\n      <Display \n        userSearch={userSearch} \n        pokeData={currentPokemon} \n        types={currentPokeTypes}\n        weight={currentPokeWeight}\n        height={currentPokeHeight}\n        pokeID={currentPokeID}\n        normalURL={normalURL}\n        shinyURL={shinyURL}\n        handlePrev={handlePrev}\n        handleNext={handleNext}\n      />\n      {isLoading ? (\n        <div className=\"pokeBallImgContainer\">\n          Loading...\n          <img id=\"pokeBallImg\" src={PokeBall} alt='Poke Ball' />\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}